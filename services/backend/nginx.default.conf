map $cookie_auth $has_auth {
  default 0;
  "~.+" 1;
}


server {
  listen 8080;
  server_name backend;

  location /api/v1/auth/ {
    proxy_pass http://auth:3333/;
  }

  location /api/v1/warehouse/ {
    # if ($has_auth = 1) {
    #     auth_request /auth;
    # }

    # # Set the access token
    # auth_request_set $access_token $upstream_http_x_access_token;
    # proxy_set_header X-Access-Token $access_token;

    proxy_pass http://warehouse:3333/;
  }

  location /api/v1/stock/ {
    # if ($has_auth = 1) {
    #     auth_request /auth;
    # }

    # # Set the access token
    # auth_request_set $access_token $upstream_http_x_access_token;
    # proxy_set_header X-Access-Token $access_token;

    proxy_pass http://stock:3333/;
  }

  # Auth check
  location = /auth {
    internal;

    proxy_pass http://auth:3333/validate;

    # No need to pass the request body
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";

    # Forward the original request headers
    proxy_set_header Cookie $http_cookie;

    # Additional headers
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
  }

  # Errors
  error_page 401 = @error401;
  error_page 403 = @error403;

  location @error401 {
    default_type application/json;
    return 401 '{"code": 401, "type": "error", "message": "You must be authenticated to access this resource"}';
  }

  location @error403 {
    default_type application/json;
    return 403 '{"code": 403, "type": "error", "message": "You do not have permission to access this resource"}';
  }
}
